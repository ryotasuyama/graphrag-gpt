■関数の仕様(引数の型、書式はapi_argを参照)
■Partオブジェクトのメソッド

〇変数要素の作成
　返り値:作成された変数要素の要素ID
　CreateVariable(
        VariableName, // 文字列：作成する変数名称(空文字不可)
        VariableValue,// 浮動小数点: 変数の値
        VariableUnit  // 変数単位：作成する変数の単位を指定
        VariableElementGroup );// 要素グループ：作成する変数要素を要素グループに入れる場合は要素グループを指定(空文字可)

〇スケッチ平面の作成
  返り値:作成されたスケッチ平面要素の要素ID
  CreateSketchPlane(
        ElementName,  // 文字列：作成するスケッチ平面名称(空文字可)
        ElementGroup, // 要素グループ：作成するスケッチ平面を要素グループに入れる場合は要素グループを指定(空文字可)
        PlaneDef, 　　// 平面：スケッチ平面を作成する平面を指定する
        PlaneOffset,  // 長さ：平面からのオフセット距離を指定
        bRevPlane,    // bool:スケッチ平面を反転するかどうかのフラグ(bool)
        bRevUV,       // bool:スケッチ平面のX,Y軸を交換するかどうかのフラグ(bool)
        bRevUDir,     // bool:スケッチ平面のX軸となる方向を反転するかどうかのフラグ(bool)
        StyleName,    // 注記スタイル:　スケッチ平面に適用する注記スタイル名称(空文字可)
        OriginPoint,  // 点：スケッチ平面の原点を指定(空文字可)
        AxisDirection,// 方向：スケッチ平面の軸方向を指定(空文字可)
        bDefAxisIsX,  // bool：スケッチ平面のX実を指定する場合はTrue(bool)
        bUpdate );    // bool：更新フラグ(未実装、使用しない)


〇スケッチレイヤーの作成
  返り値:作成されたスケッチレイヤー要素の要素ID
  CreateSketchLayer(
        SketchLayerName,  // 文字列：作成するスケッチレイヤー名称(空文字可)
        SketchPlane );　　// 要素：レイヤーを作成するスケッチ要素

〇スケッチ直線作成
  返り値:作成されたスケッチ直線要素の要素ID
  CreateSketchLine(
        SketchPlane,   // 要素：直線を作成するスケッチ要素
        SketchLineName,// 文字列：作成するスケッチ直線名称(空文字可)
        SketchLayer,   // 要素：直線を作成するスケッチレイヤー(空文字可)
        StartPoint,    // 点(2D)：始点
        EndPoint,      // 点(2D)：終点
        bUpdate );     // bool：更新フラグ(未実装、使用しない)

〇スケッチ円弧を中心点と始終点を指定して作成
  返り値:作成されたスケッチ円弧要素の要素ID
  CreateSketchArc(
        SketchPlane,   // 要素：円弧を作成するスケッチ要素
        SketchArcName, // 文字列：作成するスケッチ円弧名称(空文字可)
        SketchLayer,   // 要素：円弧を作成するスケッチレイヤー(空文字可)
        CenterPoint,   // 点(2D)：中心点
        StartPoint,    // 点(2D)：始点
        EndPoint,      // 点(2D)：終点
        bCCW,          // bool： 円弧の回転方向Trueの場合は反時計周り
        bUpdate );     // bool：更新フラグ(未実装、使用しない)
統一性を保つため、コメント内の括弧も半角括弧に統一統一性を保つため、コメント内の括弧も半角括弧に統一
〇スケッチ円弧を周上の３点を指定して作成
  返り値:作成されたスケッチ円弧要素の要素ID
  CreateSketchArc3Pts(
        SketchPlane,   // 要素：円弧を作成するスケッチ要素
        SketchArcName, // 文字列：作成するスケッチ円弧名称(空文字可)
        SketchLayer,   // 要素：円弧を作成するスケッチレイヤー(空文字可)
        StartPoint,    // 点(2D)：始点
        MidPoint,      // 点(2D)：通過点
        EndPoint,      // 点(2D)：終点
        bUpdate );     // bool：更新フラグ(未実装、使用しない)
 
〇スケッチ円を中心点を指定して作成
  返り値:作成されたスケッチ円要素の要素ID
  CreateSketchCircle(
        SketchPlane,   // 要素：円を作成するスケッチ要素
        SketchArcName, // 文字列：作成するスケッチ円名称(空文字可)
        SketchLayer,   // 要素：円を作成するスケッチレイヤー(空文字可)
        Centeroint,    // 点(2D)：中心点
        RadiusOrDiameter, // 長さ：半径または直径
        bDiameter,     // bool：直径を指定する場合はTrue
        bCCW,          // bool：円の回転方向Trueの場合は反時計周り
        bUpdate );     // bool：更新フラグ(未実装、使用しない)

〇スケッチ楕円を中心点を指定して作成
  返り値:作成されたスケッチ楕円要素の要素ID
  CreateSketchEllipse(
        SketchPlane,   // 要素：楕円を作成するスケッチ要素
        SketchArcName, // 文字列：作成するスケッチ楕円名称(空文字可)
        SketchLayer,   // 要素：楕円を作成するスケッチレイヤー(空文字可)
        Centeroint,    // 点(2D)：中心点
        bCCW,          // bool：楕円の回転方向Trueの場合は反時計周り
        MajorDir,　　　// 方向(2D)：主軸方向を指定
        MajorRadius,   // 長さ：主軸半径
        MinorRadius,   // 長さ：副軸半径
        Range,         // 範囲: (0-2pi)
        bUpdate );     // bool：更新フラグ(未実装、使用しない)

〇スケッチＮＵＲＢＳ線を中心点を指定して作成
  返り値:作成されたスケッチＮＵＲＢＳ線要素の要素ID
  CreateSketchNURBSCurve(
        SketchPlane,   // 要素：ＮＵＲＢＳ線を作成するスケッチ要素
        SketchArcName, // 文字列：作成するスケッチＮＵＲＢＳ線名称(空文字可)
        SketchLayer,   // 要素：ＮＵＲＢＳ線を作成するスケッチレイヤー(空文字可)
        nDegree,       // 整数：ＮＵＲＢＳ線の次数
        bClose,        // bool：閉じたＮＵＲＢＳ線の場合True
        bPeriodic,     // bool：周期ＮＵＲＢＳ線の場合True
        CtrlPoints,    // 点(配列): 制御点
        Weights,       // 浮動小数点(配列): 重み
        Knots,         // 浮動小数点(配列): ノットベクトル
        Range,         // 範囲: トリム範囲
        bUpdate );     // bool：更新フラグ(未実装、使用しない)


〇ファイルをインポートして要素を作成
  返り値:作成された要素の要素IDの配列
  CreateElementsFromFile(
        FileName,      // 文字列:ファイルパス(現状、Parasolid形式のみ)
       );

〇オフセットシートを作成
  返り値:作成されたオフセットシート要素の要素ID
  CreateOffsetSheet(
        SheetName,    // 文字列：作成するシート要素名称(空文字可)
        ElementGroup, // 要素グループ：作成するシート要素を要素グループに入れる場合は要素グループを指定(空文字可)
        MaterialName, // 材料：作成するシート要素の材質名称(空文字可)
        SrcSurfaces,  // 要素(配列):オフセットする元シート要素、フェイス要素の指定文字列配列
        OffsetLength, // 長さ：オフセット距離
        bOffsetBackwards, // bool： オフセット方向を反転
        bUpdate,　//bool：更新フラグ(未実装、使用しない)
    ); 

〇押し出しパラメータオブジェクトの作成
　返り値:押し出しパラメータオブジェクト
　CreateLinearSweepParam()　

〇押し出しパラメータオブジェクト
   属性
   NAME   // 文字列：要素名(空文字可)
   ElementGroup // 要素グループ：作成するシート要素を要素グループに入れる場合は要素グループを指定(空文字可)
   MaterialName // 材料：作成するシード要素の材質名称(空文字可)
   Target1  // 要素(配列)：スイープするターゲット要素１　(点、線、シート、ソリッド、あるいはソリッドフェイス)
   Target2  // 要素(配列)：スイープ方向が２方向の場合に使用。スイープするターゲット要素２
   Profile // 要素(配列)：押し出しのプロファイル要素(スケッチ、線、シート)
   ProfileNormal // 方向：プロファイルの平面法線方向。(プロファイルが３Dの直線の場合にその平面法線として指定。) 
   ProfileOffset // 長さ：プロファイル位置のオフセット距離
   DirectionType  // スイープ方向： 
   DirectionParameter1 // 長さ： スイープする距離１(SweepTarget1を指定している場合は使用しない)
   DirectionParameter2 // 長さ： スイープ方向が２方向の場合に使用。スイープする距離２(SweepTarget２を指定している場合は使用しない)
   SweepDirection // 方向：スイープする方向を設定する場合に使用。指定しない場合はプロファイルの法線方向
   DraftAngle   // 角度: 押し出し方向の勾配角度
   DraftAngle2Type　// 勾配２のタイプ: ２方向に押し出す際の勾配の取り方指定
   DraftAngle2　// 角度: ２方向目の押し出し方向の勾配角度
   ThickenType　// 厚み付けタイプ: 
   Thickeness1  // 長さ： 板厚
   Thickeness2  // 長さ： 板厚２(厚み付けタイプが２方向のときに使用)
   ThickenessOffset // 長さ： 厚みづけのオフセット距離
   bRefByGeometricMethod // bool：Trueの時は幾何位置にもとづいて関連を設定する
   bIntervalSwep // bool：区間内だけをスイープする
   ReferMethod // 関連設定: 要素の関連づけ方法の指定

〇指定したソリッド要素に押し出し形状を付加する
  返り値:作成された押し出しフィーチャーのID
  CreateLinearSweep(
        TargetSolidName,         // 要素：押し出しフィーチャーを作成する対象のソリッドを指定
        OperationType,   // オペレーションタイプ: ソリッドオペレーションのタイプを指定する
        pParam, // 押し出しパラメータオブジェクト
        bUpdate 　);　// bool：更新フラグ(未実装、使用しない)

〇プロファイル要素を押し出してシート要素を作成
  返り値:作成されたシート要素の要素ID
  CreateLinearSweepSheet(
        ParamObj, // 押し出しパラメータオブジェクト
        bUpdate);　// bool：更新フラグ(未実装、使用しない)


〇シート要素の向き(表側、法線方向)を指定した方向に揃える
  返り値:なし
  SheetAlignNormal(
        SheetElement,// 要素：方向を揃えるシート要素
        dirX,   // 浮動小数点: 方向ベクトルのX成分
        dirY,   // 浮動小数点: 方向ベクトルのY成分
        dirZ ); // 浮動小数点: 方向ベクトルのZ成分

〇シート要素の向きを反転する
  返り値:シート反転フィーチャーの要素ID
  ReverseSheet(
        SheetElement ); // 要素：反転するシート要素

〇指定要素を表示状態を設定する
  返り値:なし
  BlankElement(
        Element,  // 要素：表示状態を指定する要素
        bBlank ); // bool： Trueの時は非表示にする。Falseの時は表示する。

〇指定要素を移動コピーする
  返り値:コピーされた要素ID配列
  TranslationCopy(
        SrcElements,// 要素(配列)：コピーする要素
        nCopy,    // 整数: コピーする数
        direction,      // 方向：コピーする方向
        distance,       // 長さ：移動距離
        ReferMethod);  // 関連設定: 要素の関連づけ方法の指定

〇指定要素をミラーコピーする
  返り値:コピーされた要素ID配列
  MirrorCopy(
        SrcElements,// 要素(配列)：コピーする要素
        [in] BSTR plane,
        ReferMethod);  // 関連設定: 要素の関連づけ方法の指定

〇空のソリッド要素を作成する
  返り値:作成されたソリッドの要素ID
  CreateSolid(
        SolidName, // 文字列：作成するソリッド要素名称(空文字可)
        ElementGroup, // 要素グループ：作成するソリッド要素を要素グループに入れる場合は要素グループを指定(空文字可)
        MaterialName ) // 材料：作成するソリッド要素の材質名称(空文字可)


〇指定したソリッド要素に指定要素厚みづけした形状を作成する
  返り値:作成された厚みづけフィーチャーのID
  CreateThicken(
        ThickenFeatureName, // 文字列：作成する厚みづけフィーチャー要素名称(空文字可)
        TargetSolidName,    // 要素：厚みづけフィーチャーを作成する対象のソリッドを指定
        OperationType,      // オペレーションタイプ: ソリッドオペレーションのタイプを指定する
　　　　Sheet,　　　　　　　// 要素(配列)：厚み付けをするシートやフェイス
        ThickenType,　　　　// 厚み付けタイプ: 
        Thickeness1,        // 長さ： 板厚
        Thickeness2,　　　　// 長さ： 板厚２(厚み付けタイプが２方向のときに使用)
        ThickenessOffset,   // 長さ： 厚みづけをするシート、フェイス要素のオフセット距離
        ReferMethod,　　　　// 関連設定: 要素の関連づけ方法の指定
        bUpdate);　// bool：更新フラグ(未実装、使用しない)

〇指定したソリッド要素に別のソリッド要素形状を付加する
  返り値:作成された別ソリッドフィーチャーのID
  CreateOtherSolid(
　　　　OtherSolidFeatureName, // 文字列：作成する別ソリッドフィーチャー要素名称(空文字可)
        TargetSolidName,  // 要素：別ソリッドフィーチャーを作成する対象のソリッドを指定
        OperationType,  // オペレーションタイプ: ソリッドオペレーションのタイプを指定する
        SourceSolid,    // 要素：別ソリッドフィーチャーとするソリッド要素を指定する
        ReferMethod, // 関連設定: 要素の関連づけ方法の指定
        bUpdate　);　// bool：更新フラグ(未実装、使用しない)


〇船殻のブラケット要素のパラメータオブジェクトの作成
　返り値:ブラケット要素のパラメータオブジェクト
　CreateBracketParam()
　　
〇ブラケット要素のパラメータオブジェクト
   属性
        DefinitionType //　整数: ブラケットの作成方法指定　0: 面指定　1:基準要素指定
        BracketName // 文字列：作成するブラケットソリッド要素名称(空文字可)
        ElementGroup // 要素グループ：作成するソリッド要素を要素グループに入れる場合は要素グループを指定(空文字可)
        MaterialName // 材料：作成するソリッド要素の材質名称(空文字可)
        BasePlane    //面指定の場合の基準平面
        BasePlaneOffset // 長さ：基準平面のオフセット距離
        BaseElement  // 基準要素指定の場合の基準要素
        UseSideSheetForPlane // bool： 三面指定の場合はTrue
        Thickness // 長さ： 板厚
        Mold     // モールド位置: 
        MoldOffset // 長さ： モールド位置のオフセット距離
        BracketType // 形状タイプ: ブラケットの形状タイプ
        BracketParams,　// 形状パラメータ: ブラケットの形状タイプのパラメータ
        Scallop1Type,　// 形状タイプ: ブラケットのスカラップの形状タイプ
        Scallop1Params,　// 形状パラメータ: ブラケットのスカラップの形状タイプのパラメータ
        nScallop2Type,　// 形状タイプ: ３面ブラケットの場合のスカラップ２の形状タイプ
        Scallop2Params,　// 形状パラメータ: ブラケットのスカラップ２の形状タイプのパラメータ
        Surfaces1, // 要素(配列)：ブラケット作成する面１の要素(ソリッド、シート、フェイス)
        RevSf1, // bool： 面１の反対側にブラケットを作成する場合はTrue
        Surfaces2, // 要素(配列)：ブラケット作成する面2の要素(ソリッド、シート、フェイス)
        RevSf2, // bool： 面2の反対側にブラケットを作成する場合はTrue
        Surfaces3, // 要素(配列)：３面ブラケット作成する場合の面３の要素(ソリッド、シート、フェイス)
        RevSf3, // bool： 面3の反対側にブラケットを作成する場合はTrue
        FlangeType, // 形状タイプ: ブラケットのフランジの形状タイプ　(0の場合はフランジをつけない)
        FlangeParams,// 形状パラメータ: ブラケットのフランジの形状タイプのパラメータ
        RevFlange,　// bool： フランジの向きを反転する場合はTrue
        FlangeAngle, // 角度： フランジの角度指定　０°は直角を意味し、そこからの増分を＋−で指定
        Sf1DimensionType,　// 形状タイプ: 面１方向の寸法タイプ
        Sf1DimensonParams,　// 形状パラメータ: 面１方向の寸法タイプのパラメータ
        Sf1EndElements, // 要素(配列)：面１方向の端部要素(必要な形状タイプの場合)
        Sf1BaseElements,　// 要素(配列)：面１方向の基準要素(必要な形状タイプの場合)
        Sf2DimensionType,　// 形状タイプ: 面２方向の寸法タイプ
        Sf2DimensonParams,　// 形状パラメータ: 面２方向の寸法タイプのパラメータ
        Sf2EndElements,　// 要素(配列)：面２方向の端部要素(必要な形状タイプの場合)
        Sf2BaseElements,　// 要素(配列)：面２方向の基準要素(必要な形状タイプの場合)
        ScallopEnd1LowerType,　// 形状タイプ: 面１方向の下側端部のスカラップのタイプ
        ScallopEnd1LowerParams,　// 形状パラメータ: 面１方向の下側端部のスカラップのタイプのパラメータ
        ScallopEnd1UpperType,　// 形状タイプ: 面１方向の上側端部のスカラップのタイプ
        ScallopEnd1UpperParams,　// 形状パラメータ: 面１方向の上側端部のスカラップのタイプのパラメータ
        ScallopEnd2LowerType,　// 形状タイプ: 面２方向の下側端部のスカラップのタイプ
        ScallopEnd2LowerParams,　// 形状パラメータ: 面２方向の下側端部のスカラップのタイプのパラメータ
        ScallopEnd2UpperType,　// 形状タイプ: 面２方向の上側端部のスカラップのタイプ
        ScallopEnd2UpperParams,// 形状パラメータ: 面２方向の上側端部のスカラップのタイプのパラメータ
        WCS, // 要素： ブラケットが使用する座標系を指定。通常は指定しない
        ReferMethod, // 関連設定: 要素の関連づけ方法の指定
        
〇船殻のブラケットソリッド要素を作成する
  返り値:作成したソリッド要素のID
  CreateBracket(
　　    ParamObj, // ブラケットパラメータオブジェクト
        bUpdate ); // bool：更新フラグ(未実装、使用しない)
        

〇船殻のプレートソリッド要素を作成する
  返り値:作成したソリッド要素のID
  CreatePlate(
        PlateName,     // 文字列：作成するプレートソリッド要素名称(空文字可)
        ElementGroup,  // 要素グループ：作成するソリッド要素を要素グループに入れる場合は要素グループを指定(空文字可)
        MaterialName, // 材料：作成するソリッド要素の材質名称(空文字可)
        Plane,        // 平面： プレートのる平面位置
        PlaneOffset,　// 長さ：　平面のオフセット距離を指定
        Thickness,　　// 長さ： 板厚
        nMold,　　　　// モールド位置: 
        MoldOffset,  // 長さ： モールド位置のオフセット距離
        BoundSolid,　// 要素：　プレートソリッドの境界となるソリッド要素。
        Section1End1,　// 長さ： プレートソリッドの平面上の方向１の境界位置の座標値１
        Section1End2,　// 長さ： プレートソリッドの平面上の方向１の境界位置の座標値２
        Section2End1,　// 長さ： プレートソリッドの平面上の方向２の境界位置の座標値１
        Section2End2,　// 長さ： プレートソリッドの平面上の方向２の境界位置の座標値２
        bUpdate ); // bool：更新フラグ(未実装、使用しない)

〇船殻の条材ソリッド要素のパラメータオブジェクトの作成
  返り値:条材要素のパラメータオブジェクト
  CreateProfileParam()

〇条材要素のパラメータオブジェクト
   属性
        DefinitionType //　整数: の作成方法指定　0:取付線指定 　1:基準面指定  2:取付線＋指定方向線  3: 元要素指定
　　　　　　　　　　　 // 4:ホール指定  5:２点  6:ロンジ間  7:基準線指定  8:基準点と方向  9:基準要素
        ProfileName // 文字列：作成する条材ソリッド要素名称(空文字可)
        ElementGroup // 要素グループ：作成するソリッド要素を要素グループに入れる場合は要素グループを指定(空文字可)
        MaterialName // 材料：作成するソリッド要素の材質名称(空文字可)
        FlangeName // 文字列：ビルトアップを作成する場合のフランジソリッド要素名称(空文字可)
        FlangeElementGroup// 要素グループ：フランジソリッド要素を要素グループに入れる場合は要素グループを指定(空文字可)
        FlangeMaterialName// 材料：作成するフランジソリッド要素の材質名称(空文字可)
        ProfileType    // 形状タイプ: 条材の形状タイプを指定
        ProfileParam // 形状パラメータ: 条材の形状タイプのパラメータ
        FaceAngle // 角度： ビルトアップを作成する場合のフランジの角度指定　０°は直角を意味し、そこからの増分を＋−で指定
        ConnectionTol // 長さ： 取付線が複数の場合の連続性の判定トレランスを指定(通常は指定しない、空文字)
        Mold      // モールド位置: 
        MoldOffset // 長さ： モールド位置のオフセット距離
        ReverseDir // bool：取付方向を反転する時True
        ReverseAngle // bool：アングル方向を反転する時True
        BaseOnAttachLines // bool： 取付線の境界を基準にする時True
        CalcSnipOnlyAttachLines // bool：端部スニップ量を取付線のみで計算する時True
        NotProfjectAttachLines // bool：取付線を取付面に投影しない時True
        ProjectionDir // 方向：取付線を投影する場合に設定。通常は設定しない(空白文字)
        AttachDirMethod // 整数:　条材取付方向設定　0: デフォルト　1:基準平面内　2:取付角度指定
        AttachAngle // 角度： 取付角度指定
        AttachDirection // 方向：条材取付方向 を指定する場合に設定する
        DefAnglePositionAxisDir　// 方向：ねじれた条材を作成する場合のそのネジレ角度を定義する軸方向を指定。
        DefAngleBaseDir　// 方向：ねじれた条材を作成する場合のそのネジレ角度の基準となる軸方向を指定。
        CCWDefAngle,　// bool：　ねじれた条材を作成する場合のネジレ角度を反統計まわりに指定する場合はTrue
        DefPossitionAngles // 位置と角度配列: ねじれた条材を作成する場合のネジレ角度を位置と角度で指定
        DefPositionNormalAngles // 位置と角度配列:ねじれた条材を作成する場合のネジレ角度を位置と角度を取付面の法線位置からの差分で指定
        End1Elements  // 要素(配列)： 端部１、端部となる要素を指定する
        End1Type       // 形状タイプ: 端部１、条材の端部タイプを指定
        End1TypeParams // 形状パラメータ: 端部１、条材の端部タイプのパラメータ
        End2Elements   // 要素(配列)： 端部２、端部となる要素を指定する
        End2Type       // 形状タイプ: 端部２、条材の端部タイプを指定
        End2TypeParams // 形状パラメータ: 端部２、条材の端部タイプのパラメータ
        End1ScallopType      // 形状タイプ: 端部１、条材の端部スカラップタイプを指定
        End1ScallopTypeParams// 形状パラメータ: 端部１、条材の端部スカラップタイプのパラメータ
        End2ScallopType      // 形状タイプ: 端部２、条材の端部スカラップタイプを指定
        End2ScallopTypeParams// 形状パラメータ: 端部２、条材の端部スカラップタイプのパラメータ
        AttachLines // 要素(配列)：条材の取付線 
        AttachSurface　// 要素(配列)：条材を取り付ける面要素(フェイス、シートボディ)
        BasePlane　// 要素：基準面要素(平面、シート、フェイス)を指定
        BasePlaneOffset // 長さ： 基準面のオフセット距離を指定
        BaseSolid　// 要素：基準要素(ソリッド)を指定
        PathCurves // 要素(配列)：取付線(取付線＋指定方向線で作成する際に使用する)
        DirLines　　// 要素(配列)：基準直線(取付線＋指定方向線で作成する際に使用する)
        OrignalProfile // 要素： 作成元の条材(元要素指定で作成する際に使用する)
        HoleFeature  // 要素： ホールフィーチャー(ホール指定で作成する際に使用する)
        LocationAtHole //整数: 条材の位置　0:上 1:下 2:左 3:右　(ホール指定で作成する際に使用する)
        BasePoint1 // 点: 基準点1 (２点もしくは基準点と方向で作成する際に使用する)
        BasePoint2 // 点: 基準点2 (２点で作成する際に使用する)
        BaseProfile1 // 要素： ロンジ１(ロンジ間で作成する際に使用する)
        BaseProfile2 // 要素： ロンジ２(ロンジ間で作成する際に使用する)
        BaseDirection1 // 方向： (基準点と方向で作成する際に使用する)
        BaseDirection2 // 方向： 取付方向指定　(基準点と方向で作成する際に使用する)
        BaseLocation //整数:  基準位置 0:左下 1:中下 2:右下 3:左中 4:中中 5:右中 6:左上 7:中上 8:右上 (基準点と方向で作成する際に使用する)
        ReferMethod // 関連設定: 要素の関連づけ方法の指定

〇船殻の条材ソリッド要素を取付線指定で作成する
  返り値:作成した条材ソリッド要素のID(配列　配列[0]Web要素 配列[1]フランジ要素
  CreateProfile(
　　    ParamObj, // 条材要素のパラメータオブジェクト
        bUpdate );  // bool：更新フラグ(未実装、使用しない)

〇ボディを指定した要素で分割する
  返り値:分割で作成されたボディ要素のID配列
BodyDivideByElements(
    pDriveFeatureName, // 文字列：作成する分割フィーチャー要素名称(空文字可)
    pTargetBody,// 要素: 分割対象のボディ
    pDivideElements,  // 要素(配列): 分割をする要素(シートボディ、フェイス、平面要素)
    pAlignmentDirection,　// 方向： 分割されたボディ要素の順番を整列させるのに使用する方向
    pWCS, // 要素： 方向を定義する座標系(通常は指定しない)
    ReferMethod, // 関連設定: 要素の関連づけ方法の指定
     bUpdate);　// bool：更新フラグ(未実装、使用しない)

〇ボディを指定したソリッドで削除することで分割する(ボディの区分けコマンド)
  返り値:分割で作成されたボディ要素のID配列
　BodySeparateBySubSolids(
    pSeparateFeatureName, // 文字列：作成する分割フィーチャー要素名称(空文字可)
    pTargetBody, // 要素: 分割対象のボディ
    pSubSolids, // 要素(配列): 分割をするソリッド要素
    pAlignmentDirection,　// 方向： 分割されたボディ要素の順番を整列させるのに使用する方向
    ReferMethod, // 関連設定: 要素の関連づけ方法の指定
    bUpdate);　// bool：更新フラグ(未実装、使用しない)


〇ボディを指定した線で分割する
  返り値:分割で作成されたボディ要素のID配列
BodyDivideByCurves(
        pDriveFeatureName,// 文字列：作成する分割フィーチャー要素名称(空文字可)
        pTargetBody,　// 要素: 分割対象のボディ
        pDivideCurves, // 要素(配列): 分割をするスケッチ等の線要素
        bNorProjection, // bool： 線要素を要素に投影するかどうかのフラグ
        CorrectEndPointsTolerance, // 長さ： 分割線が複数の場合の分割線同士のの判定トレランスを指定(通常は指定しない、空文字)
        AlignmentDirection, // 方向： 分割されたボディ要素の順番を整列させるのに使用する方向
        ReferMethod, // 関連設定: 要素の関連づけ方法の指定
        bUpdate ) // bool：更新フラグ(未実装、使用しない)

〇ボディを指定した平面で分割する
  返り値:分割で作成されたボディ要素のID配列
BodyDivideByPlanes(
    pDriveFeatureName, // 文字列：作成する分割フィーチャー要素名称(空文字可)
    TargetBody, // 要素: 分割対象のボディ
    plane, // 要素: 分割をする平面
    PlaneDeltaCopy,  分割をする平面をコピーする際のオフセット距離
    nPlaneCopy, // 整数: 分割をする平面を複数コピーして分割をする(通常は1)
    pAlignmentDirection, // 方向： 分割されたボディ要素の順番を整列させるのに使用する方向
    WCS, // 要素： 要素分割に使用する座標系を指定。通常は指定しない
    ReferMethod, // 関連設定: 要素の関連づけ方法の指定
    bUpdate )　// bool：更新フラグ(未実装、使用しない)

〇ボディを指定した要素でカットする
  返り値:作成されたカットフィーチャーのID
  CutBody(
  　FeatureName, // 文字列：作成するカットフィーチャー要素名称(空文字可)
  　TargetBody, // 要素：カット対象のソリッド、シート
  　CutElement, // 要素：カットする要素(平面、シート)
  　ElementOffset, // 長さ： カットする要素のオフセット距離を指定
  　bCutForward, // 関連設定: 要素の関連づけ方法の指定
  　ReferMethod　)


〇指定したソリッド要素に境界要素を指定した板形状を作成する
  返り値:作成された境界要素指定フィーチャーのID
　CreateBoundedPlate(
    FeatureName, // 文字列：作成する境界要素指定フィーチャー要素名称(空文字可)
    TargetSolid, // 要素：境界要素指定フィーチャーを作成する対象のソリッドを指定
    OperationType,　// オペレーションタイプ: ソリッドオペレーションのタイプを指定する
    Plane,        // 平面： 板の定義平面位置
    PlaneOffset,  // 長さ：　平面のオフセット距離を指定
    BoundObjects,// 要素(配列)：境界要素(シート、フェイス、スケッチ、平面、ソリッド)
    ThickenType,// 厚み付けタイプ: 
    Thickness1,// 長さ： 板厚
    Thickness2,// 長さ： 板厚２(厚み付けタイプが２方向のときに使用)
    ThicknessOffset,// 長さ： 厚みづけをする板のオフセット距離
    RefByGeometricMethod, // bool：Trueの時は幾何位置にもとづいて関連を設定する
    ReferMethod,// 関連設定: 要素の関連づけ方法の指定
    bUpdate )// bool：更新フラグ(未実装、使用しない)


〇指定したソリッド要素に境界ボックス形状を作成する
  返り値:作成された境界ボックス形状フィーチャーのID
CreateBoundingBox(
    FeatureName,　// 文字列：作成する境界ボックスフィーチャー要素名称(空文字可)
    TargetSolid,　// 要素：境界ボックスフィーチャーを作成する対象のソリッドを指定
    OperationType,　// オペレーションタイプ: ソリッドオペレーションのタイプを指定する
    Bodies,　// 要素(配列)：境界ボックスを計算するソリッド、シート要素
    bOptimalBox,// bool：Trueを指定するとボックスを計算する座標系を最適なものにする。(そうでない場合は絶対座標系で計算する)
    ReferMethod, // 関連設定: 要素の関連づけ方法の指定
    bUpdate ) // bool：更新フラグ(未実装、使用しない)


〇指定要素の色を設定する
  SetElementColor(
     Element  // 要素：色を設定する要素
     RValue,  // 整数: 赤色の値(0-255)
     GValue,  // 整数: 緑色の値(0-255)
     BValue,  // 整数: 青色の値(0-255)
     Transparency ) // 浮動小数点: 透明度の指定(0.0不透明-1.0透明)


〇スイープパラメータオブジェクトの作成
　返り値:スイープパラメータオブジェクト
CreateSweepParam()
    
〇スイープパラメータオブジェクト
   属性
   NAME   // 文字列：要素名(空文字可)
   ElementGroup, // 要素グループ：作成するシート要素を要素グループに入れる場合は要素グループを指定(空文字可)
   MaterialName // 材料：作成するシード要素の材質名称(空文字可)
   ReferMethod // 関連設定: 要素の関連づけ方法の指定
   bRefByGeometricMethod // bool：Trueの時は幾何位置にもとづいて関連を設定する
   ThickenType　// 厚み付けタイプ: 
   Thickeness1  // 長さ： 板厚
   Thickeness2  // 長さ： 板厚２(厚み付けタイプが２方向のときに使用)
   ThickenessOffset // 長さ： 厚みづけのオフセット距離
   Profile // 要素(配列)：スイープのプロファイル要素(スケッチ、線)
   Path // 要素(配列)：スイープのパス要素(スケッチ、線)
   ProfileNormal // 方向：プロファイルの平面法線方向。(プロファイルが３Dの直線の場合にその平面法線として指定。) 
   LockDirection　// 方向：　プロファイルをパスに沿って回転させずに固定してスイープさせる際に使用する固定方向
   TwistLine　// 要素(配列)：ねじれを定義する直線
   TwistPosition　// 要素(配列)：ねじれを定義する位置(点)
   TwistAngle　// 角度(配列)：ねじれの定義点でのねじれ角度
   ParallelSweep　　// bool：プロファイルをパスにたいして平行になるようにスイープさせるときTrue
   MinimizeFace　　// bool：スイープされた要素を構成するフェイスの数を最小化させるときTrue

〇指定したソリッド要素にスイープ形状を付加する
  返り値:作成されたスイープフィーチャーのID
CreateSweep(
        TargetSolidName, // 要素：スイープフィーチャーを作成する対象のソリッドを指定
        OperationType,   // オペレーションタイプ: ソリッドオペレーションのタイプを指定する
        pParam, // スイープパラメータオブジェクト
        bUpdate 　);　// bool：更新フラグ(未実装、使用しない)

〇プロファイル要素をスイープしてシート要素を作成
  返り値:作成されたシート要素の要素ID
  CreateSweepSheet(
        ParamObj, // スイープパラメータオブジェクト
        bUpdate);　// bool：更新フラグ(未実装、使用しない)

〇回転パラメータオブジェクトの作成
　返り値:回転パラメータオブジェクト
CreateRotationalSweepParam()

〇回転パラメータオブジェクト
   属性
   NAME   // 文字列：要素名(空文字可)
   ElementGroup, // 要素グループ：作成するシート要素を要素グループに入れる場合は要素グループを指定(空文字可)
   MaterialName // 材料：作成するシード要素の材質名称(空文字可)
   ReferMethod // 関連設定: 要素の関連づけ方法の指定
   bRefByGeometricMethod // bool：Trueの時は幾何位置にもとづいて関連を設定する
   ThickenType　// 厚み付けタイプ: 
   Thickeness1  // 長さ： 板厚
   Thickeness2  // 長さ： 板厚２(厚み付けタイプが２方向のときに使用)
   ThickenessOffset // 長さ： 厚みづけのオフセット距離
   Profile // 要素(配列)：回転のプロファイル要素(スケッチ、線)
   Axis // 要素：回転の回転軸要素(線)
   DirectionType  //スイープ方向 ：
   Angle // 角度：回転角度
   Angle2 // 角度：スイープ方向が２方向だった場合の２方向側の回転角度

    
〇指定したソリッド要素に回転形状を付加する
  返り値:作成された回転フィーチャーのID
CreateRotationalSweep(
        TargetSolidName, // 要素：回転フィーチャーを作成する対象のソリッドを指定
        OperationType,   // オペレーションタイプ: ソリッドオペレーションのタイプを指定する
        pParam, // 回転パラメータオブジェクト
        bUpdate 　);　// bool：更新フラグ(未実装、使用しない)

〇プロファイル要素を回転してシート要素を作成
  返り値:作成されたシート要素の要素ID    
CreateRotationalSweepSheet(
        ParamObj, // 回転パラメータオブジェクト
        bUpdate);　// bool：更新フラグ(未実装、使用しない)

〇3Dの直線線要素を作成
  返り値:線要素の要素ID
CreateLine(
        StartPoint,    // 点(3D)：始点
        EndPoint )      // 点(3D)：終点

〇3Dの円弧線要素を作成
  返り値:線要素の要素ID
CreateArc(
        CenterPoint,// 点(3D)：中心点
        Normal,     // 方向：軸方向
        MajorDir,   // 方向：主軸方向(パラメータ０の位置方向
        Radius,     // 長さ：半径
        bClose,     // bool： Trueの時は円を作成する
        Range )     // 範囲: (0-2pi)
    
〇3Dの楕円線要素を作成
  返り値:線要素の要素ID
CreateEllipse(
        CenterPoint,// 点(3D)：中心点
        Normal,     // 方向：軸方向
        MajorDir,   // 方向：主軸方向(パラメータ０の位置方向
        MajorRadius,   // 長さ：主軸半径
        MinorRadius,   // 長さ：副軸半径
        bClose,     // bool： Trueの時は閉じたを作成する
        Range )     // 範囲: (0-2pi)


〇3DのＮＵＲＢＳ線要素を作成
  返り値:線要素の要素ID
CreateNURBSCurve(
        nDegree,       // 整数：ＮＵＲＢＳ線の次数
        bClose,        // bool：閉じたＮＵＲＢＳ線の場合True
        bPeriodic,     // bool：周期ＮＵＲＢＳ線の場合True
        CtrlPoints,    // 点(配列): 制御点
        Weights,       // 浮動小数点(配列): 重み
        Knots,         // 浮動小数点(配列): ノットベクトル
        Range,         // 範囲: トリム範囲

〇ロフトパラメータオブジェクトの作成
　返り値:ロフトパラメータオブジェクト        
  CreateLoftParam()

〇ロフトパラメータオブジェクト
   属性
   NAME   // 文字列：要素名(空文字可)
   ElementGroup, // 要素グループ：作成するシート要素を要素グループに入れる場合は要素グループを指定(空文字可)
   MaterialName // 材料：作成するシード要素の材質名称(空文字可)
   ReferMethod // 関連設定: 要素の関連づけ方法の指定
   Profile // 要素(配列)：ロフトのプロファイル要素(スケッチ、線)
   Guide // 要素(配列)：ロフトのガイド要素(スケッチ、線)
   Alignment　 // 要素(配列)：ロフトのプロファイル要素の整列要素(スケッチ、線)
   StartTangentType　// 整数：始点側の接続要素指定(0:指定なし 1:平面に接続 2:面群にG1連続で接続 3:面群にG2連続で接続
   StartTangentElement　// 要素(配列)：始点側の接続要素
   StartTangentScale　// 浮動小数点:　始点側の接続スケール
   EndTangentType　// 整数：終点側の接続要素指定(0:指定なし 1:平面に接続 2:面群にG1連続で接続 3:面群にG2連続で接続
   EndTangentElement　// 要素(配列)：終点側の接続要素
   EndTangentScale　// 浮動小数点:　終点側の接続スケール
   Close　　　　　　// bool：閉じたロフト形状を作成するときはTrue
   UseGuidesInProfiles　// bool： プロファイル範囲内でガイドせんを利用する場合はTrue


〇指定したソリッド要素にロフト形状を付加する
  返り値:作成されたロフトフィーチャーのID    
CreateLoft(
        TargetSolidName, // 要素：ロフトフィーチャーを作成する対象のソリッドを指定
        OperationType,   // オペレーションタイプ: ソリッドオペレーションのタイプを指定する
        pParam, // ロフトパラメータオブジェクト
        bUpdate 　);　// bool：更新フラグ(未実装、使用しない)

〇ロフトシート要素を作成
  返り値:作成されたシート要素の要素ID
CreateLoftSheet(
        ParamObj, // ロフトパラメータオブジェクト
        bUpdate);　// bool：更新フラグ(未実装、使用しない)

〇船殻のスロットパラメータオブジェクトの作成
　返り値:スロットパラメータオブジェクト        
CreateSlotParam()

〇スロットパラメータオブジェクト
   属性
   SlotName        // 文字列：作成する条材ソリッド要素名称(空文字可)
   CollarName      // 文字列：作成するカラープレート要素名称(空文字可)
   CollarMaterial　　　// 材料：作成するカラープレートの材質名称(空文字可)
   CollarElementGroup　//  要素グループ：作成するカラープレート要素を要素グループに入れる場合は要素グループを指定(空文字可)
   Collar2Name      // 文字列：作成する２つ目のカラープレート要素名称(空文字可)
   Collar2Material　　　// 材料：作成する２つ目のカラープレートの材質名称(空文字可)
   Collar2ElementGroup　//  要素グループ：作成する２つ目のカラープレート要素を要素グループに入れる場合は要素グループを指定(空文字可)
   ProfileType    // 形状タイプ: スロットの形状タイプを指定
   ProfileParam // 形状パラメータ: スロットの形状タイプのパラメータ
   AttachFace // 要素：スロットをあけるフェイス要素
   ProfileSolid　// 要素：スロットをとおすプロファイルソリッド要素
   ProfileFlangeSolid　// 要素：スロットをとおすプロファイルのフランジソリッド要素
   ReverseDir　　// bool：スロットの向きを反転するときはTrue
   ExtendToBoundary　// bool：スロットを境界まで延長するときはTrue
   MakeVevel　　// bool：スロットに開先形状を作成するときはTrue
}

〇船殻のスロット要素、カラープレートを作成する
  返り値:作成されたスロットフィーチャー、カラープレート１，カラープレート２の要素ID配列
CreateSlot(
        ParamObj, // スロットパラメータオブジェクト
        bUpdate);　// bool：更新フラグ(未実装、使用しない)

〇船殻のフェイスプレートパラメータオブジェクトの作成
　返り値:フェイスプレートパラメータオブジェクト        
CreateFacePlateParam()

〇フェイスプレートパラメータオブジェクト
   属性
   Name // 文字列：作成するフェイスプレートソリッド要素名称(空文字可)
   ElementGroup // 要素グループ：作成するソリッド要素を要素グループに入れる場合は要素グループを指定(空文字可)
   MaterialName // 材料：作成するソリッド要素の材質名称(空文字可)
   DefinitionType // 整数： フェイスプレートの定義方法(0:面指定 , 1:元要素指定 , 2:ブラケット要素指定 , 3:取付線指定 )
   ProfileType    // 形状タイプ: フェイスプレートの形状タイプを指定
   ProfileParam // 形状パラメータ: フェイスプレートの形状タイプのパラメータ
   FaceAngle // 角度：角度指定　０°は直角を意味し、そこからの増分を＋−で指定
   ReverseDirection // bool：フェイスプレートの幅方向の向きを反転するときはTrue
   End1Elements  // 要素(配列)： 端部１、端部となる要素を指定する
   End1Type       // 形状タイプ: 端部１、フェイスプレートの端部タイプを指定
   End1TypeParams // 形状パラメータ: 端部１ フェイスプレートの端部タイプのパラメータ
   End2Elements   // 要素(配列)： 端部２、端部となる要素を指定する
   End2Type       // 形状タイプ: 端部２、フェイスプレートの端部タイプを指定
   End2TypeParams // 形状パラメータ: 端部２、フェイスプレートの端部タイプのパラメータ
   BaseFaces　　　// 要素(配列)： 面指定で作成する場合の基準面(フェイス)
   AttachFaces　　// 要素(配列)： 面指定、取付線指定で作成する場合の取付面(フェイス)
   OrignalFacePlate　// 要素： 元要素指定で作成する場合の元となるフェイスプレート要素
   Bracket　　　　// 要素： ブラケット指定で作成する場合のブラケット要素
   BaseCurves　　// 要素(配列)： 取付線指定で作成する場合の取付線(カーブ、エッジ)
   ProjectionDir // 方向：取付線指定で作成する場合の取付線の投影方向
   NotProjectAttachLines // bool：取付線指定で作成する場合に取付線を面に投影しない場合はTrue
   ReverseAttachDirection // bool：取付線指定で作成する場合に取付方向を反転する場合はTrue
   BaseOwner // 要素： 面指定で作成する場合の面の属するソリッド要素
}
    

〇船殻のフェイスプレート要素トを作成する
  返り値:作成されたフェイスプレート要素ID
CreateFacePlate(
        ParamObj, // フェイスプレートパラメータオブジェクト
        bUpdate);　// bool：更新フラグ(未実装、使用しない)

〇データム平面の作成(移動)
　既存平面をオフセット移動コピーしたデータム平面を作成します
  返り値:作成されたデータム平面の要素ID
CreateOffsetDatumPlane(
    Name,         // 文字列：作成するデータム平面要素名称(空文字可)
    ElementGroup, // 要素グループ：作成するデータム平面要素を要素グループに入れる場合は要素グループを指定(空文字可)
    Plane,        // 平面：元になる平面を指定する
    OffsetDistance, // 長さ：元になる平面からのオフセット距離を指定
    ReferMethod,   // 関連設定: 要素の関連づけ方法の指定(未実装、使用しない)
    bUpdate )  // bool：更新フラグ(未実装、使用しない)

〇データム平面の作成(回転)
　既存平面を回転移動コピーしたデータム平面を作成します
  返り値:作成されたデータム平面の要素ID
CreateRotatedDatumPlane(
    Name,         // 文字列：作成するデータム平面要素名称(空文字可)
    ElementGroup, // 要素グループ：作成するデータム平面要素を要素グループに入れる場合は要素グループを指定(空文字可)
    Plane,        // 平面：元になる平面を指定する
    Axis,         // 軸： 回転軸を指定する
    Angle,        // 角度： 回転角度
    ReferMethod,   // 関連設定: 要素の関連づけ方法の指定(未実装、使用しない)
    bUpdate )  // bool：更新フラグ(未実装、使用しない)
